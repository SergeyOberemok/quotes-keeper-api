{"version":3,"sources":["BL/quote.js","Quotes/QuotesContext.js","Quotes/AddNewQuoteComponent/AddNewQuoteComponent.js","Quotes/QuoteComponent/QuoteComponent.js","Quotes/QuoteListComponent/QuoteListComponent.js","core/api-urls.js","Quotes/QuotesComponent/QuotesComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Quote","params","this","phrase","author","QuotesContext","React","createContext","AddNewQuoteComponent","props","addNewQuote","useContext","inputsHandler","useState","setPhrase","setAuthor","inputs","value","onChange","event","target","clear","useNewQuoteInputsHandler","className","onSubmit","preventDefault","htmlFor","type","id","placeholder","disabled","QuoteComponent","isRemoving","setRemoving","removeQuote","quote","onClick","QuoteListComponent","quotes","length","map","index","API_URLS","read","create","delete","QuotesComponent","setQuotes","isLoading","setLoading","isAdding","setAdding","useEffect","Axios","get","then","response","data","catch","console","error","Provider","post","newQuote","NotificationManager","success","replace","_id","findIndex","item","splice","warning","Pagination","defaultActivePage","firstItem","lastItem","pointing","secondary","totalPages","App","memo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f902705.chunk.js","sourcesContent":["export class Quote {\n  constructor(params) {\n    this.phrase = params.phrase || '';\n    this.author = params.author || '';\n  }\n}\n","import React from 'react';\n\nconst QuotesContext = React.createContext();\n\nexport default QuotesContext;","import { useContext, useState } from 'react';\nimport { Quote } from '../../BL/quote';\nimport QuotesContext from '../QuotesContext';\nimport './AddNewQuoteComponent.scss';\n\nfunction useNewQuoteInputsHandler() {\n  const defaultValue = '';\n  const [phrase, setPhrase] = useState(defaultValue);\n  const [author, setAuthor] = useState(defaultValue);\n\n  return {\n    inputs: {\n      phrase: {\n        value: phrase,\n        onChange: (event) => setPhrase(event.target.value),\n      },\n      author: {\n        value: author,\n        onChange: (event) => setAuthor(event.target.value),\n      },\n    },\n    phrase: () => phrase,\n    author: () => author,\n    clear: () => {\n      setPhrase(defaultValue);\n      setAuthor(defaultValue);\n    },\n  };\n}\n\nfunction AddNewQuoteComponent(props) {\n  const { addNewQuote } = useContext(QuotesContext);\n  const inputsHandler = useNewQuoteInputsHandler('');\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (inputsHandler.phrase()) {\n      addNewQuote(new Quote({ phrase: inputsHandler.phrase(), author: inputsHandler.author() }));\n    }\n\n    inputsHandler.clear();\n  }\n\n  return (\n    <div className=\"add-new-quote--wrapper\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"two fields\">\n          <div className=\"twelve wide field\">\n            <label htmlFor=\"phrase\">Phrase</label>\n            <input type=\"text\" id=\"phrase\" {...inputsHandler.inputs.phrase} placeholder=\"phrase\" />\n          </div>\n          <div className=\"four wide field\">\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" {...inputsHandler.inputs.author} placeholder=\"author\" />\n          </div>\n        </div>\n        <button className=\"ui button\" type=\"submit\" disabled={props.disabled}>\n          Add new quote\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddNewQuoteComponent;\n","import { useContext, useState } from 'react';\nimport QuotesContext from '../QuotesContext';\nimport './QuoteComponent.scss';\n\nfunction QuoteComponent(props) {\n  const [isRemoving, setRemoving] = useState(false);\n  const { removeQuote } = useContext(QuotesContext);\n\n  function handleRemoving() {\n    removeQuote(props.quote);\n\n    setRemoving(true);\n  }\n\n  return (\n    <div className=\"item\">\n      <div className=\"middle aligned content\">\n        <div className=\"header\">{props.quote.phrase}</div>\n        <div className=\"description\">{props.quote.author}</div>\n\n        <div className=\"extra\">\n          <div className=\"ui right floated\">\n            {isRemoving ? (\n              <i className=\"spinner loading icon\"></i>\n            ) : (\n              <i className=\"close icon\" onClick={handleRemoving}></i>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuoteComponent;\n","import QuoteComponent from '../QuoteComponent/QuoteComponent';\nimport './QuoteListComponent.scss';\n\nfunction QuoteListComponent(props) {\n  return (\n    <div className=\"quote-list--wrapper\">\n      {props.quotes.length > 0 ? (\n        <div className=\"ui divided items\">\n          {props.quotes.map((quote, index) => {\n            return <QuoteComponent key={index} quote={quote} />;\n          })}\n        </div>\n      ) : (\n        <p>Quote list is empty</p>\n      )}\n    </div>\n  );\n}\n\nexport default QuoteListComponent;\n","export const API_URLS = {\n  quotes: {\n    read: '/api/quotes',\n    create: '/api/quotes',\n    delete: '/api/quotes/<id>',\n  },\n};\n","import Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from 'semantic-ui-react';\nimport { NotificationManager } from 'react-notifications';\nimport AddNewQuoteComponent from '../AddNewQuoteComponent/AddNewQuoteComponent';\nimport QuoteListComponent from '../QuoteListComponent/QuoteListComponent';\nimport QuotesContext from '../QuotesContext';\nimport { API_URLS } from '../../core';\n\nimport './QuotesComponent.scss';\n\nfunction QuotesComponent() {\n  const [quotes, setQuotes] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [isAdding, setAdding] = useState(false);\n\n  useEffect(() => {\n    Axios.get(API_URLS.quotes.read)\n      .then((response) => response.data)\n      .then((quotes) => setQuotes(quotes))\n      .then(() => setLoading(false))\n      .catch(console.error);\n  }, []);\n\n  function addNewQuote(quote) {\n    setAdding(true);\n\n    Axios.post(API_URLS.quotes.create, quote)\n      .then((response) => response.data)\n      .then((newQuote) => {\n        setQuotes([...quotes, newQuote]);\n      })\n      .then(() => NotificationManager.success('Quote added successfully', 'New quote'))\n      .then(() => setAdding(false))\n      .catch(console.error);\n  }\n\n  function removeQuote(quote) {\n    Axios.delete(API_URLS.quotes.delete.replace('<id>', quote._id))\n      .then((response) => {\n        const index = quotes.findIndex((item) => item._id === quote._id);\n\n        quotes.splice(index, 1);\n\n        setQuotes([...quotes]);\n      })\n      .then(() => NotificationManager.warning('Quote was deleted', 'Delete quote'))\n      .catch(console.error);\n  }\n\n  return (\n    <QuotesContext.Provider\n      value={{\n        addNewQuote,\n        removeQuote,\n      }}\n    >\n      <div className=\"ui container\">\n        {isLoading ? (\n          <i className=\"spinner loading icon\"></i>\n        ) : (\n          <QuoteListComponent quotes={quotes} />\n        )}\n\n        <div className=\"ui divider\"></div>\n\n        <div className=\"ui one column centered grid\">\n          <div className=\"one column centered row\">\n            <div className=\"center aligned column\">\n              <Pagination\n                defaultActivePage={1}\n                firstItem={null}\n                lastItem={null}\n                pointing\n                secondary\n                disabled={quotes.length < 5}\n                totalPages={3}\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"ui divider\"></div>\n\n        <AddNewQuoteComponent disabled={isAdding} />\n      </div>\n    </QuotesContext.Provider>\n  );\n}\n\nexport default QuotesComponent;\n","import { memo } from 'react';\nimport './App.scss';\nimport QuotesComponent from './Quotes/QuotesComponent/QuotesComponent';\n\nconst App = memo(() => {\n  return (\n    <div className=\"App\">\n      <header></header>\n\n      <main>\n        <h2 className=\"ui center aligned header\">Quotes</h2>\n\n        <QuotesComponent />\n      </main>\n    </div>\n  );\n});\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { NotificationContainer } from 'react-notifications';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-notifications/lib/notifications.css';\nimport './index.scss';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <div>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n\n    <NotificationContainer />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}